#!/bin/bash

# CIPgram Test Script
# This script demonstrates how to use the CIPgram tool

set -e

echo "=== CIPgram Industrial Network Analyzer ==="
echo "üéØ Now with organized output directories and automatic image generation!"
echo ""

# Check if the binary exists
if [ ! -f "./cipgram" ]; then
    echo "Error: cipgram binary not found. Please run 'go build -o cipgram main.go' first."
    exit 1
fi

echo "‚úì CIPgram binary found"

# Test the new directory structure
echo ""
echo "=== New Features ===
üóÇÔ∏è  Organized output: diagrams/\$pcapname/
üñºÔ∏è  Automatic image generation (PNG, SVG, high-res)
üß† Intelligent classification (no config required)
üìä Enhanced analysis with 20+ protocols"
echo ""

# Check if we have a sample pcap file
if [ -f "sample_industrial.pcap" ]; then
    echo "‚úì Sample pcap file found, analyzing with new organized output..."
    
    # Run analysis - will create diagrams/sample_industrial/ directory
    ./cipgram -pcap sample_industrial.pcap
    
    echo ""
    echo "‚úì Analysis complete! Check the organized output:"
    echo "üìÅ Directory: diagrams/sample_industrial/"
    ls -la diagrams/sample_industrial/ 2>/dev/null || echo "   (Directory will be created after analysis)"
    
else
    echo "‚ö† No sample pcap file found."
    echo ""
    echo "üöÄ To test CIPgram's new organized output:"
    echo ""
    echo "1. üìÅ Automatic directory creation:"
    echo "   ./cipgram -pcap your_file.pcap"
    echo "   ‚Üí Creates: diagrams/your_file/"
    echo ""
    echo "2. üñºÔ∏è Images generated automatically:"
    echo "   ‚Ä¢ diagram.png (standard view)"
    echo "   ‚Ä¢ diagram.svg (scalable)"  
    echo "   ‚Ä¢ diagram_hires.png (high resolution)"
    echo ""
    echo "3. üìä All files organized:"
    echo "   ‚Ä¢ diagram.dot (source)"
    echo "   ‚Ä¢ diagram.json (data)"
    echo ""
    echo "4. üî¥ Live capture creates timestamped directories:"
    echo "   sudo ./cipgram -iface en0"
    echo "   ‚Üí Creates: diagrams/live_capture_timestamp/"
fi

echo ""
echo "=== Configuration Files ==="
if [ -f "purdue_config.yaml" ]; then
    echo "‚úì Configuration file: purdue_config.yaml"
else
    echo "‚ö† Configuration file not found"
fi

if [ -f "README.md" ]; then
    echo "‚úì Documentation: README.md"
else
    echo "‚ö† README.md not found"
fi

echo ""
echo "=== Supported Protocols ==="
echo "‚Ä¢ EtherNet/IP (CIP) - TCP/44818, UDP/2222"
echo "‚Ä¢ Modbus TCP - 502"
echo "‚Ä¢ DNP3 - 20000"
echo "‚Ä¢ BACnet/IP - 47808"
echo "‚Ä¢ OPC-UA - 4840"
echo "‚Ä¢ S7Comm - 102"
echo "‚Ä¢ FINS/Omron - 9600"
echo "‚Ä¢ SLMP/Mitsubishi - 5007"
echo "‚Ä¢ Profinet DCP/RT"
echo "‚Ä¢ And many more..."

echo ""
echo "=== Next Steps ==="
echo "1. Obtain a pcap file of industrial network traffic"
echo "2. Run: ./cipgram -pcap your_file.pcap -config purdue_config.yaml"
echo "3. View results: diagram.dot and diagram.json"
echo "4. Generate visualization: dot -Tpng diagram.dot -o network.png"
echo ""
echo "For more information, see README.md"
